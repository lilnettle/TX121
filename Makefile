# Makefile –¥–ª—è RADXA CRSF Bridge –∑ Feedback
# –ö–æ–º–ø—ñ–ª—è—Ç–æ—Ä —Ç–∞ –æ—Å–Ω–æ–≤–Ω—ñ —Ñ–ª–∞–≥–∏
CXX = g++
CXXFLAGS = -std=c++17 -Wall -Wextra -O2 -pthread
DEBUG_FLAGS = -g -DDEBUG -fsanitize=address
TARGET = bridge_radxa
SOURCE = bridge_radxa.cpp

# GStreamer –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏
GSTREAMER_CFLAGS = $(shell pkg-config --cflags gstreamer-1.0 2>/dev/null)
GSTREAMER_LIBS = $(shell pkg-config --libs gstreamer-1.0 2>/dev/null)

# GLib –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏  
GLIB_CFLAGS = $(shell pkg-config --cflags glib-2.0 2>/dev/null)
GLIB_LIBS = $(shell pkg-config --libs glib-2.0 2>/dev/null)

# –í—Å—ñ —Ñ–ª–∞–≥–∏ —Ä–∞–∑–æ–º
ALL_CFLAGS = $(CXXFLAGS) $(GSTREAMER_CFLAGS) $(GLIB_CFLAGS)
ALL_LIBS = $(GSTREAMER_LIBS) $(GLIB_LIBS)

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
RED = \033[0;31m
GREEN = \033[0;32m
YELLOW = \033[0;33m
BLUE = \033[0;34m
NC = \033[0m # No Color

# –û—Å–Ω–æ–≤–Ω–∞ —Ü—ñ–ª—å
$(TARGET): $(SOURCE)
	@echo "$(BLUE)üî® –ö–æ–º–ø—ñ–ª—è—Ü—ñ—è $(TARGET)...$(NC)"
	$(CXX) $(ALL_CFLAGS) -o $(TARGET) $(SOURCE) $(ALL_LIBS)
	@echo "$(GREEN)‚úÖ –ö–æ–º–ø—ñ–ª—è—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!$(NC)"

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤—ñ–≤
install-deps:
	@echo "$(BLUE)üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π...$(NC)"
	@if command -v apt-get >/dev/null 2>&1; then \
		echo "$(YELLOW)–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è APT (Debian/Ubuntu)$(NC)"; \
		sudo apt-get update && \
		sudo apt-get install -y \
			build-essential \
			pkg-config \
			libgstreamer1.0-dev \
			libgstreamer-plugins-base1.0-dev \
			libglib2.0-dev \
			gstreamer1.0-plugins-good \
			gstreamer1.0-plugins-bad \
			gstreamer1.0-plugins-ugly \
			gstreamer1.0-libav \
			gstreamer1.0-tools; \
	elif command -v yum >/dev/null 2>&1; then \
		echo "$(YELLOW)–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è YUM (CentOS/RHEL)$(NC)"; \
		sudo yum groupinstall -y "Development Tools" && \
		sudo yum install -y \
			pkg-config \
			gstreamer1-devel \
			gstreamer1-plugins-base-devel \
			glib2-devel \
			gstreamer1-plugins-good \
			gstreamer1-plugins-bad \
			gstreamer1-plugins-ugly; \
	elif command -v pacman >/dev/null 2>&1; then \
		echo "$(YELLOW)–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è Pacman (Arch Linux)$(NC)"; \
		sudo pacman -S --needed \
			base-devel \
			pkg-config \
			gstreamer \
			gst-plugins-base \
			gst-plugins-good \
			gst-plugins-bad \
			gst-plugins-ugly \
			glib2; \
	else \
		echo "$(RED)‚ùå –ù–µ–≤—ñ–¥–æ–º–∏–π –ø–∞–∫–µ—Ç–Ω–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä!$(NC)"; \
		echo "–í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –≤—Ä—É—á–Ω—É: build-essential, pkg-config, gstreamer1.0-dev, glib2.0-dev"; \
		exit 1; \
	fi
	@echo "$(GREEN)‚úÖ –ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!$(NC)"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
check-deps:
	@echo "$(BLUE)üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π...$(NC)"
	@echo -n "GCC/G++: "; $(CXX) --version | head -n1 || echo "$(RED)‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ$(NC)"
	@echo -n "pkg-config: "; pkg-config --version || echo "$(RED)‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ$(NC)"
	@echo -n "GStreamer: "; pkg-config --modversion gstreamer-1.0 2>/dev/null && echo "$(GREEN)‚úÖ$(NC)" || echo "$(RED)‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ$(NC)"
	@echo -n "GLib: "; pkg-config --modversion glib-2.0 2>/dev/null && echo "$(GREEN)‚úÖ$(NC)" || echo "$(RED)‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ$(NC)"
	@echo -n "C++17 –ø—ñ–¥—Ç—Ä–∏–º–∫–∞: "; echo 'int main(){return 0;}' | $(CXX) -std=c++17 -x c++ - -o /tmp/cpp17test 2>/dev/null && echo "$(GREEN)‚úÖ$(NC)" || echo "$(RED)‚ùå –ù–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è$(NC)"
	@rm -f /tmp/cpp17test

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–µ—Ä—ñ–π–Ω–∏—Ö –ø–æ—Ä—Ç—ñ–≤
check-ports:
	@echo "$(BLUE)üîå –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–µ—Ä—ñ–π–Ω–∏—Ö –ø–æ—Ä—Ç—ñ–≤...$(NC)"
	@echo "USB —Å–µ—Ä—ñ–π–Ω—ñ –ø–æ—Ä—Ç–∏:"
	@ls -la /dev/ttyUSB* 2>/dev/null | while read line; do echo "  $(GREEN)‚úÖ$(NC) $$line"; done || echo "  $(YELLOW)‚ö†Ô∏è USB –ø–æ—Ä—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ$(NC)"
	@echo "ACM —Å–µ—Ä—ñ–π–Ω—ñ –ø–æ—Ä—Ç–∏:"
	@ls -la /dev/ttyACM* 2>/dev/null | while read line; do echo "  $(GREEN)‚úÖ$(NC) $$line"; done || echo "  $(YELLOW)‚ö†Ô∏è ACM –ø–æ—Ä—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ$(NC)"
	@echo "UART –ø–æ—Ä—Ç–∏ (Pi/Radxa):"
	@ls -la /dev/ttyAMA* /dev/ttyS* 2>/dev/null | while read line; do echo "  $(GREEN)‚úÖ$(NC) $$line"; done || echo "  $(YELLOW)‚ö†Ô∏è UART –ø–æ—Ä—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ$(NC)"

# –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ—Ä—Ç–∏
port-info:
	@echo "$(BLUE)üìã –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å–µ—Ä—ñ–π–Ω—ñ –ø–æ—Ä—Ç–∏:$(NC)"
	@for port in /dev/ttyUSB* /dev/ttyACM* /dev/ttyAMA* /dev/ttyS*; do \
		if [ -e "$$port" ]; then \
			echo "$(YELLOW)üìç –ü–æ—Ä—Ç: $$port$(NC)"; \
			if command -v udevadm >/dev/null 2>&1; then \
				udevadm info --name=$$port --query=property 2>/dev/null | grep -E "(ID_VENDOR|ID_MODEL|ID_SERIAL|DEVPATH)" | sed 's/^/  /' || true; \
			fi; \
			ls -la $$port | sed 's/^/  –ü—Ä–∞–≤–∞: /'; \
			echo ""; \
		fi \
	done

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É
setup-permissions:
	@echo "$(BLUE)üîê –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É...$(NC)"
	sudo usermod -a -G dialout $(USER)
	sudo usermod -a -G tty $(USER)
	@echo "$(GREEN)‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ $(USER) –¥–æ–¥–∞–Ω–æ –¥–æ –≥—Ä—É–ø dialout —Ç–∞ tty$(NC)"
	@echo "$(YELLOW)‚ö†Ô∏è –í–∏–π–¥—ñ—Ç—å —ñ —É–≤—ñ–π–¥—ñ—Ç—å –∑–Ω–æ–≤—É (–∞–±–æ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ—Å—å) –¥–ª—è –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω$(NC)"

# Debug –≤–µ—Ä—Å—ñ—è –∑ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–º–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞–º–∏
debug: CXXFLAGS += $(DEBUG_FLAGS)
debug: clean $(TARGET)
	@echo "$(GREEN)‚úÖ Debug –≤–µ—Ä—Å—ñ—è —Å–∫–æ–º–ø—ñ–ª—å–æ–≤–∞–Ω–∞ –∑ AddressSanitizer$(NC)"

# –í–µ—Ä—Å—ñ—è –∑ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—î—é
release: CXXFLAGS += -O3 -DNDEBUG -march=native
release: clean $(TARGET)
	@echo "$(GREEN)‚úÖ Release –≤–µ—Ä—Å—ñ—è –∑ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—é –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—î—é$(NC)"

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–∏
run: $(TARGET)
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ $(TARGET)...$(NC)"
	@if [ "$$(id -u)" = "0" ]; then \
		./$(TARGET); \
	else \
		echo "$(YELLOW)‚ö†Ô∏è –ü–æ—Ç—Ä—ñ–±–Ω—ñ –ø—Ä–∞–≤–∞ root –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ —Å–µ—Ä—ñ–π–Ω–∏—Ö –ø–æ—Ä—Ç—ñ–≤$(NC)"; \
		sudo ./$(TARGET); \
	fi

# –ó–∞–ø—É—Å–∫ —É debug —Ä–µ–∂–∏–º—ñ
run-debug: debug
	@echo "$(BLUE)üêõ –ó–∞–ø—É—Å–∫ debug –≤–µ—Ä—Å—ñ—ó...$(NC)"
	sudo ./$(TARGET)

# –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑ —Ñ–µ–π–∫–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏
test: $(TARGET)
	@echo "$(BLUE)üß™ –¢–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø—É—Å–∫...$(NC)"
	@echo "$(YELLOW)–¶–µ –±—É–¥–µ –∑–∞–ø—É—Å–∫ —É —Ç–µ—Å—Ç–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ –∑ –ª–æ–≥—É–≤–∞–Ω–Ω—è–º$(NC)"
	sudo strace -e trace=network,file ./$(TARGET) || true

# –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –ø–æ—Ä—Ç—ñ–≤ —É —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ
monitor-ports:
	@echo "$(BLUE)üëÅÔ∏è –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ä—ñ–π–Ω–∏—Ö –ø–æ—Ä—Ç—ñ–≤ (Ctrl+C –¥–ª—è –≤–∏—Ö–æ–¥—É)...$(NC)"
	@while true; do \
		clear; \
		echo "$(BLUE)üìÖ $$(date)$(NC)"; \
		echo "$(BLUE)üîå –ê–∫—Ç–∏–≤–Ω—ñ —Å–µ—Ä—ñ–π–Ω—ñ –ø–æ—Ä—Ç–∏:$(NC)"; \
		ls -la /dev/tty{USB,ACM,AMA,S}* 2>/dev/null || echo "  –ü–æ—Ä—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"; \
		echo ""; \
		echo "$(BLUE)üíª –ü—Ä–æ—Ü–µ—Å–∏ —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å –ø–æ—Ä—Ç–∏:$(NC)"; \
		lsof /dev/tty* 2>/dev/null | head -10 || echo "  –ù–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤"; \
		sleep 2; \
	done

# –õ–æ–≥—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
watch-logs:
	@echo "$(BLUE)üìú –ü–µ—Ä–µ–≥–ª—è–¥ —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –ª–æ–≥—ñ–≤ (Ctrl+C –¥–ª—è –≤–∏—Ö–æ–¥—É)...$(NC)"
	sudo dmesg -w | grep -i -E "(usb|serial|tty|cdc|acm)" --color=always

# –û—á–∏—â–µ–Ω–Ω—è
clean:
	@echo "$(BLUE)üßπ –û—á–∏—â–µ–Ω–Ω—è...$(NC)"
	rm -f $(TARGET)
	rm -f core dump.*
	@echo "$(GREEN)‚úÖ –û—á–∏—â–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ$(NC)"

# –ü–æ–∫–∞–∑–∞—Ç–∏ –¥–æ–≤—ñ–¥–∫—É
help:
	@echo "$(BLUE)üìñ RADXA CRSF Bridge - –î–æ–≤—ñ–¥–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:$(NC)"
	@echo ""
	@echo "$(YELLOW)üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:$(NC)"
	@echo "  make install-deps    - –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –≤—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ"
	@echo "  make check-deps      - –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π"
	@echo "  make setup-permissions - –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ –ø–æ—Ä—Ç—ñ–≤"
	@echo ""
	@echo "$(YELLOW)üî® –ö–æ–º–ø—ñ–ª—è—Ü—ñ—è:$(NC)"
	@echo "  make                 - –ó–≤–∏—á–∞–π–Ω–∞ –∫–æ–º–ø—ñ–ª—è—Ü—ñ—è"
	@echo "  make debug          - Debug –≤–µ—Ä—Å—ñ—è –∑ AddressSanitizer"
	@echo "  make release        - –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∞ –≤–µ—Ä—Å—ñ—è"
	@echo ""
	@echo "$(YELLOW)üöÄ –ó–∞–ø—É—Å–∫:$(NC)"
	@echo "  make run            - –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º—É"
	@echo "  make run-debug      - –ó–∞–ø—É—Å—Ç–∏—Ç–∏ debug –≤–µ—Ä—Å—ñ—é"
	@echo "  make test           - –¢–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø—É—Å–∫ –∑ strace"
	@echo ""
	@echo "$(YELLOW)üîç –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:$(NC)"
	@echo "  make check-ports    - –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å–µ—Ä—ñ–π–Ω—ñ –ø–æ—Ä—Ç–∏"
	@echo "  make port-info      - –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ—Ä—Ç–∏"
	@echo "  make monitor-ports  - –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –ø–æ—Ä—Ç—ñ–≤ —É —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ"
	@echo "  make watch-logs     - –ü–µ—Ä–µ–≥–ª—è–¥ —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –ª–æ–≥—ñ–≤"
	@echo ""
	@echo "$(YELLOW)üßπ –û–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è:$(NC)"
	@echo "  make clean          - –û—á–∏—Å—Ç–∏—Ç–∏ —Å–∫–æ–º–ø—ñ–ª—å–æ–≤–∞–Ω—ñ —Ñ–∞–π–ª–∏"
	@echo "  make help           - –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü—é –¥–æ–≤—ñ–¥–∫—É"

# –®–≤–∏–¥–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å—å–æ–≥–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ–≥–æ
quick-setup: install-deps setup-permissions $(TARGET)
	@echo "$(GREEN)üéâ –®–≤–∏–¥–∫–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!$(NC)"
	@echo "$(YELLOW)‚ö†Ô∏è –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ—Å—å –∞–±–æ –ø–µ—Ä–µ–ª–æ–≥—ñ–Ω—å—Ç–µ—Å—å –¥–ª—è –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É$(NC)"
	@echo "$(BLUE)–ü—ñ—Å–ª—è —Ü—å–æ–≥–æ –∑–∞–ø—É—Å—Ç—ñ—Ç—å: make run$(NC)"

# –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º - –ø–æ–∫–∞–∑–∞—Ç–∏ –¥–æ–≤—ñ–¥–∫—É
.DEFAULT_GOAL := help

# –ü–æ–∑–Ω–∞—á–∏—Ç–∏ —Ñ–∞–ª—å—à–∏–≤—ñ —Ü—ñ–ª—ñ
.PHONY: install-deps check-deps check-ports port-info setup-permissions debug release run run-debug test monitor-ports watch-logs clean help quick-setup